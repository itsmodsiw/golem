#
# Vivado (TM) v2017.1 (64-bit)
#
# golem_litecoin_miner.tcl: Tcl script for re-creating project 'golem_litecoin_miner'
#
# Generated by Vivado on Thu Jan 11 16:50:08 SAST 2018
# IP Build 1846188 on Fri Apr 14 20:52:08 MDT 2017
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (golem_litecoin_miner.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/common_pkg.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/salsa820.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/block_mix.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/rom_mix_stage1.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/rom_mix_stage2.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/sdram_mem.v"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/mm_to_block_array.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/block_array_to_mm.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/rom_mix.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_k_bram.coe"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/sha256.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_k_bram_bige.coe"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/sha256_wrapper.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/hmac_sha256.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/hmac_sha256_pad.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/hmac_sha256_shorten.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/pbkdf_function.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/pbkdf_hmac_sha256.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/scrypt.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/axis_addr_gen.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/scrypt_wrapper.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/component.xml"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/scrypt_message_RAM/scrypt_message_RAM.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/salsa_32b_add/salsa_32b_add.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/axi_mm_fifo/axi_mm_fifo.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/axi_mm_fifo_rd/axi_mm_fifo_rd.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_k_bram/sha256_k_bram.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_w_bram/sha256_w_bram.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_32b_add/sha256_32b_add.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_6b_sub/sha256_6b_sub.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_add9/sha256_add9.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/sha256_fifo/sha256_fifo.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/hmac_add64/hmac_add64.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/hmac_key_fifo/hmac_key_fifo.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/pbkf_4B_ram/pbkf_4B_ram.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/ip/pbkdf_fifo/pbkdf_fifo.xci"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/salsa820_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/salsa820_tb_behav.wcfg"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/block_mix_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/rom_mix_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/sha256_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/hmac_sha256_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/pbkdf_function_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/pbkdf_hmac_sha256_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/scrypt_tb.vhd"
#    "/media/edata/git/golem/vivado/golem_litecoin_miner/srcs/scrypt_wrapper_tb.vhd"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/golem_litecoin_miner"]"

# Create project
create_project golem_litecoin_miner $origin_dir/golem_litecoin_miner -part xc7z020clg400-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [get_projects golem_litecoin_miner]
set_property -name "board_part" -value "digilentinc.com:zybo-z7-20:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/golem_litecoin_miner.cache/ip" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "DisplayOnly" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/srcs/common_pkg.vhd"]"\
 "[file normalize "$origin_dir/srcs/salsa820.vhd"]"\
 "[file normalize "$origin_dir/srcs/block_mix.vhd"]"\
 "[file normalize "$origin_dir/srcs/rom_mix_stage1.vhd"]"\
 "[file normalize "$origin_dir/srcs/rom_mix_stage2.vhd"]"\
 "[file normalize "$origin_dir/srcs/sdram_mem.v"]"\
 "[file normalize "$origin_dir/srcs/mm_to_block_array.vhd"]"\
 "[file normalize "$origin_dir/srcs/block_array_to_mm.vhd"]"\
 "[file normalize "$origin_dir/srcs/rom_mix.vhd"]"\
 "[file normalize "$origin_dir/ip/sha256_k_bram.coe"]"\
 "[file normalize "$origin_dir/srcs/sha256.vhd"]"\
 "[file normalize "$origin_dir/ip/sha256_k_bram_bige.coe"]"\
 "[file normalize "$origin_dir/srcs/sha256_wrapper.vhd"]"\
 "[file normalize "$origin_dir/srcs/hmac_sha256.vhd"]"\
 "[file normalize "$origin_dir/srcs/hmac_sha256_pad.vhd"]"\
 "[file normalize "$origin_dir/srcs/hmac_sha256_shorten.vhd"]"\
 "[file normalize "$origin_dir/srcs/pbkdf_function.vhd"]"\
 "[file normalize "$origin_dir/srcs/pbkdf_hmac_sha256.vhd"]"\
 "[file normalize "$origin_dir/srcs/scrypt.vhd"]"\
 "[file normalize "$origin_dir/srcs/axis_addr_gen.vhd"]"\
 "[file normalize "$origin_dir/srcs/scrypt_wrapper.vhd"]"\
 "[file normalize "$origin_dir/component.xml"]"\
 "[file normalize "$origin_dir/ip/scrypt_message_RAM/scrypt_message_RAM.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/srcs/common_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/salsa820.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/block_mix.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/rom_mix_stage1.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/rom_mix_stage2.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/mm_to_block_array.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/block_array_to_mm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/rom_mix.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/sha256.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/sha256_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/hmac_sha256.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/hmac_sha256_pad.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/hmac_sha256_shorten.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/pbkdf_function.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/pbkdf_hmac_sha256.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/scrypt.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/axis_addr_gen.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/scrypt_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/component.xml"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "IP-XACT" -objects $file_obj

set file "$origin_dir/ip/scrypt_message_RAM/scrypt_message_RAM.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "scrypt_wrapper" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/salsa_32b_add/salsa_32b_add.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/axi_mm_fifo/axi_mm_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/axi_mm_fifo_rd/axi_mm_fifo_rd.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_k_bram/sha256_k_bram.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_w_bram/sha256_w_bram.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_32b_add/sha256_32b_add.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_6b_sub/sha256_6b_sub.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_add9/sha256_add9.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/sha256_fifo/sha256_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/hmac_add64/hmac_add64.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/hmac_key_fifo/hmac_key_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/pbkf_4B_ram/pbkf_4B_ram.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/ip/pbkdf_fifo/pbkdf_fifo.xci"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 "[file normalize "$origin_dir/srcs/salsa820_tb.vhd"]"\
 "[file normalize "$origin_dir/salsa820_tb_behav.wcfg"]"\
 "[file normalize "$origin_dir/srcs/block_mix_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/rom_mix_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/sha256_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/hmac_sha256_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/pbkdf_function_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/pbkdf_hmac_sha256_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/scrypt_tb.vhd"]"\
 "[file normalize "$origin_dir/srcs/scrypt_wrapper_tb.vhd"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/srcs/salsa820_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/block_mix_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/rom_mix_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/sha256_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/hmac_sha256_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/pbkdf_function_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/pbkdf_hmac_sha256_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/scrypt_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/srcs/scrypt_wrapper_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "scrypt_wrapper_tb" -objects $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part xc7z020clg400-1 -flow {Vivado Synthesis 2014} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2014" [get_runs synth_1]
}
set obj [get_runs synth_1]

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part xc7z020clg400-1 -flow {Vivado Implementation 2014} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2014" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:golem_litecoin_miner"
